From d727fdd56ea919943dbb809867e86499e2fdcfcf Mon Sep 17 00:00:00 2001
From: Billy Laws <blaws05@gmail.com>
Date: Wed, 23 Nov 2022 21:30:23 +0000
Subject: [PATCH 14/14] Align SSBOs to 0x40 bytes

---
 ir_opt/global_memory_to_storage_buffer_pass.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/ir_opt/global_memory_to_storage_buffer_pass.cpp b/ir_opt/global_memory_to_storage_buffer_pass.cpp
index 336338e..a07e375 100644
--- a/ir_opt/global_memory_to_storage_buffer_pass.cpp
+++ b/ir_opt/global_memory_to_storage_buffer_pass.cpp
@@ -415,7 +415,8 @@ IR::U32 StorageOffset(IR::Block& block, IR::Inst& inst, StorageBufferAddr buffer
     }
     // Subtract the least significant 32 bits from the guest offset. The result is the storage
     // buffer offset in bytes.
-    const IR::U32 low_cbuf{ir.GetCbuf(ir.Imm32(buffer.index), ir.Imm32(buffer.offset))};
+    IR::U32 low_cbuf{ir.GetCbuf(ir.Imm32(buffer.index), ir.Imm32(buffer.offset))};
+    low_cbuf = ir.BitwiseAnd(low_cbuf, ir.Imm32(~(0x40U - 1U)));
     return ir.ISub(offset, low_cbuf);
 }
 
-- 
2.38.1

