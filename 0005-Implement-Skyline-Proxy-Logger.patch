From 9bf45991d464a86f990503ff5b3c134e1d7ddce7 Mon Sep 17 00:00:00 2001
From: PixelyIon <pixelyion@protonmail.com>
Date: Sun, 21 Nov 2021 15:05:49 +0530
Subject: [PATCH 5/7] Implement Skyline Proxy Logger

We define certain functions that will be implemented in Skyline to allow for zero-overhead interaction between them while allowing the shader compiler to directly use Skyline's Logger APIs.
---
 common/README.md |  2 +-
 common/log.h     | 15 ++++++++++++---
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/common/README.md b/common/README.md
index 9785fee..5d9fa8e 100644
--- a/common/README.md
+++ b/common/README.md
@@ -3,5 +3,5 @@ A cut down version of *yuzu*'s `src/common` folder reimplementing functionality
 * Only `DECLARE_ENUM_FLAG_OPERATORS` is implemented in `common_funcs.h`
 * Only `DEBUG_ASSERT` and `INSERT_PADDING_*` are implemented in `assert.h`
 * Only a subset of used settings are implemented in `setttings.h`
-* All `LOG_*` macros are stubbed in `log.h`
+* All `LOG_*` macros are handled by proxy in `log.h`
 * Any unscoped classes are placed in the `Shader` namespace to avoid include conflicts
diff --git a/common/log.h b/common/log.h
index 5e01521..77ee80f 100644
--- a/common/log.h
+++ b/common/log.h
@@ -3,6 +3,15 @@
 
 #pragma once
 
-#define LOG_DEBUG(...)
-#define LOG_WARNING(...)
-#define LOG_ERROR(...)
+#include <fmt/format.h>
+
+namespace Shader::Log {
+    // Proxy logging framework, these functions are implemented by Skyline
+    void Debug(const std::string& message);
+    void Warn(const std::string& message);
+    void Error(const std::string& message);
+}
+
+#define LOG_DEBUG(tag, message, ...) Shader::Log::Debug(fmt::format("Shader Compiler (" #tag "): " message __VA_OPT__(,) __VA_ARGS__))
+#define LOG_WARNING(tag, message, ...) Shader::Log::Warn(fmt::format("Shader Compiler (" #tag "): " message __VA_OPT__(,) __VA_ARGS__))
+#define LOG_ERROR(tag, message, ...) Shader::Log::Error(fmt::format("Shader Compiler (" #tag "): " message __VA_OPT__(,) __VA_ARGS__))
-- 
2.35.1

